@using Microsoft.FluentUI.AspNetCore.Components
@rendermode InteractiveServer
@inject NavigationManager Navigation

<div class="flex flex-col relative w-full">
    <FluentStack Orientation="Orientation.Horizontal" Width="100%" class="p-4">
        <img src="/assets/motormountlogo.png" Slot="start" width="30px"/>
        <NavLink class="w-full" href="" Match="NavLinkMatch.All">
            <FluentButton class="hidden sm:inline-flex" Appearance="Appearance.Accent">
                <span>MotorMount - @CurrentPageTitle</span>
            </FluentButton>
        </NavLink>
        <FluentCounterBadge Dot="true" Appearance="Appearance.Accent">
            <FluentButton IconStart="@(new Icons.Regular.Size16.Alert())" Appearance="Appearance.Outline"></FluentButton>
        </FluentCounterBadge>
        <FluentProfileMenu Status="@PresenceStatus.Available" HeaderLabel="Microsoft" Initials="LI4" FullName="Bill Gates" EMail="bill.gates@microsoft.com" PopoverStyle="min-width: 330px;" />
    </FluentStack>
    <FluentDivider Style="width: 100%;" Role="DividerRole.Presentation"></FluentDivider>
    <div class="p-3">
        @RenderMenuOptions
    </div>
    <FluentDivider Style="width: 100%;" Role="DividerRole.Presentation"></FluentDivider>
</div>

<FluentDesignTheme StorageName="theme" @bind-Mode="@Mode" @bind-OfficeColor="@OfficeColor" />
<FluentPopover Style="width: 300px;" VerticalThreshold="170" AnchorId="themePopover" @bind-Open="_visibleThemePopover">
    <Header>@(new Emojis.Objects.Color.Default.Paintbrush().ToMarkup("20px")) Customize your experience</Header>
    <Body>
        <FluentGrid>
            <FluentGridItem>
                <FluentSelect Label="Theme" Items="@(Enum.GetValues<DesignThemeModes>())" Width="250px" @bind-SelectedOption="@Mode" />
            </FluentGridItem>
            <FluentGridItem>
                <FluentSelect Label="Color" Items="@(Enum.GetValues<OfficeColor>().Select(i => (OfficeColor?)i))" Height="200px" Width="250px" @bind-SelectedOption="@OfficeColor">
                    <OptionTemplate>
                        <FluentStack>
                            <FluentLabel>@context</FluentLabel>  
                        </FluentStack>
                    </OptionTemplate> 
                </FluentSelect>
            </FluentGridItem>
        </FluentGrid>
    </Body>
</FluentPopover>

@code {
    bool _visibleMenuPopover;
    bool _visibleThemePopover;
    public DesignThemeModes Mode { get; set; }
    public OfficeColor? OfficeColor { get; set; }

    private RenderFragment RenderMenuOptions =  @<FluentStack Orientation="Orientation.Horizontal" Width="100%">
        <NavLink class="w-full" href="" Match="NavLinkMatch.All">
            <FluentButton class="w-full" IconStart="@(new Icons.Regular.Size20.Home())" Appearance="Appearance.Lightweight">
                <span class="hidden sm:block">Dashboard</span>
            </FluentButton>
        </NavLink>
        <NavLink class="w-full" href="shop">
            <FluentButton class="w-full" IconStart="@(new Icons.Regular.Size20.Cart())" Appearance="Appearance.Lightweight">
                <span class="hidden sm:block">Parts Shop</span>
            </FluentButton>
        </NavLink>
        <NavLink class="w-full" href="inventory">
            <FluentButton class="w-full" IconStart="@(new Icons.Regular.Size20.Box())" Appearance="Appearance.Lightweight">
                <span class="hidden sm:block">Inventory</span>
            </FluentButton>
        </NavLink>
        <NavLink class="w-full" href="assembly">
            <FluentButton class="w-full" IconStart="@(new Icons.Regular.Size20.Wrench())" Appearance="Appearance.Lightweight">
                <span class="hidden sm:block">Assembly</span>
            </FluentButton>
        </NavLink>
        </FluentStack>;

    private string CurrentPageTitle { get; set; } = "Home";
    protected override void OnInitialized() // When component is loaded
    {
        base.OnInitialized();
        SetPageTitle();
        Navigation.LocationChanged += (sender, args) => SetPageTitle();  // Listen for navigation changes
    }

    private void SetPageTitle()
    {
        var uri = Navigation.Uri;
        if (uri.EndsWith("/shop"))
        {
            CurrentPageTitle = "Parts Shop";
        }
        else if (uri.EndsWith("/inventory"))
        {
            CurrentPageTitle = "Inventory";
        }
        else if (uri.EndsWith("/assembly"))
        {
            CurrentPageTitle = "Assembly";
        }
        else
        {
            CurrentPageTitle = "Dashboard";
        }
        StateHasChanged();  // Trigger UI update (somehow blazor doesnt refresh on its own without it -.-)
    }
}