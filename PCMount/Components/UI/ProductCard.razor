@namespace PCMount.Components.UI

@using Microsoft.FluentUI.AspNetCore.Components
@using PCMount.Data.Models
@rendermode InteractiveServer

<FluentCard MinimalStyle="true" class="relative flex flex-col justify-between items-center text-center gap-2 h-full">
    <div class="w-36 h-40 rounded-md relative pb-6 mb-1">
        <img src="@Product!.Image" class="object-cover w-full h-full rounded-md" />
        <div class="absolute pos z-40 custom-transition transition duration-200 ease-in-out">
            <FluentBadge Appearance="Appearance.Neutral">
                <span class="text-green-500 font-medium text-xl">$@Product!.Price</span>
            </FluentBadge>
        </div>
    </div>
    @if (Product!.Discount > 0) {
        <FluentBadge Fill="highlight" BackgroundColor="#991b1b" Color="white" Class="absolute top-5 right-5 text-lg font-bold">-@Product!.Discount%</FluentBadge>
    }
    <h3 class="mb-0">
        @Product!.Name
    </h3>
    <div class="mt-auto">
        <div class="flex flex-col gap-1 justify-start items-start text-left text-sm mb-1.5">
            @if (Product!.Motherboard != null) {
                <span><FluentBadge Appearance="Appearance.Neutral">Motherboard:</FluentBadge> @Product!.Motherboard?.Name</span>
            }
            @if (Product!.Processor != null) {
                <span><FluentBadge Appearance="Appearance.Neutral">CPU:</FluentBadge> @Product!.Processor?.Name</span>
            }
            @if (Product!.Memory != null) {
                <span><FluentBadge Appearance="Appearance.Neutral">RAM:</FluentBadge> @Product!.Memory?.Name</span>
            }
            @if (Product!.GraphicsCard != null) {
                <span><FluentBadge Appearance="Appearance.Neutral">GPU:</FluentBadge> @Product!.GraphicsCard?.Name</span>
            }
            @if (Product!.Storage != null) {
                <span><FluentBadge Appearance="Appearance.Neutral">Storage:</FluentBadge> @Product!.Storage?.Name</span>
            }
            @if (Product!.PowerSupply != null) {
                <span><FluentBadge Appearance="Appearance.Neutral">PSU:</FluentBadge> @Product!.PowerSupply?.Name</span>
            }
            @if (Product!.Case != null) {
                <span><FluentBadge Appearance="Appearance.Neutral">Case:</FluentBadge> @Product!.Case?.Name</span>
            }
        </div>
        <div class="mt-2 w-full">
            <FluentButton class="w-full" IconStart="@(new Icons.Regular.Size16.Cart())" Appearance="Appearance.Accent" OnClick="@(() => AddToCart(Product))">Add to Cart</FluentButton>
        </div>
    </div>
</FluentCard>

@code {
    [Parameter]
    public Computer? Product { get; set; } = null;

    [Parameter]
    public EventCallback<Computer> OnAddToCart { get; set; }

    private void AddToCart(Computer product) {
        OnAddToCart.InvokeAsync(product);
    }
}


<style scoped>
.pos {
    bottom: 0px;
    left: -20px;
    transform: rotate(10deg);
}

.custom-transition:hover {
    transform: scale(1.15); 
}
</style>