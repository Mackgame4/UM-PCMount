@page "/"

@using PCMount.Data.Models
@using PCMount.Components.UI
@using Microsoft.FluentUI.AspNetCore.Components
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize(Roles = "Admin, User")]
@attribute [AllowAnonymous]
@attribute [StreamRendering]
<PageTitle>PCMount - Shop</PageTitle>

<FluentToolbar class="py-2 sticky top-0 z-10">
    <FluentSearch Placeholder="Search for Products" />
    <FluentButton IconEnd="@(new Icons.Regular.Size16.Filter())">Filters</FluentButton>
    <FluentButton IconStart="@(new Icons.Regular.Size16.Add())" Appearance="Appearance.Lightweight">Order Custom Build</FluentButton>
    <FluentSpacer />
    <FluentButton IconStart="@(new Icons.Regular.Size16.Cart())"></FluentButton>
    <AuthorizeView>
        <NotAuthorized>
            <NavLink href="/login" Match="NavLinkMatch.All">
                <FluentButton IconStart="@(new Icons.Regular.Size20.Person())" Appearance="Appearance.Accent">Login</FluentButton>
            </NavLink>
        </NotAuthorized>
        <Authorized>
            <NavLink href="/dashboard" Match="NavLinkMatch.All">
                <FluentButton IconStart="@(new Icons.Regular.Size20.Board())" Appearance="Appearance.Lightweight">Dashboard</FluentButton>
            </NavLink>
        </Authorized>
    </AuthorizeView>
</FluentToolbar>
<div class="p-2">
    @if (computers == null) {
        <LoadingDialog Title="Waiting page data request" />
        <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 2xl:grid-cols-7 gap-5">
            @foreach(int element in Enumerable.Range(1, 14)) {
                <FluentSkeleton Width="100%" Height="340px"></FluentSkeleton>
            }
        </div>
    } else {
        <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 2xl:grid-cols-7 gap-5">
            @foreach (var product in computers!) {
                <ProductCard ProductName="@product.Name" ProductPrice="@product.Price" ProductImage="@product.Image" ProductDiscount="@product.Discount" />
            }
        </div>
    }
</div>

@code {
    private List<Computer>? computers;

    protected override async Task OnInitializedAsync() {
        await Task.Delay(500);
        computers = new List<Computer> {
            new Computer { Name = "NZXT H5 Gaming Elite", Price = 1000, Image = "/assets/cdn/computer-nzxt-h5.png", Discount = 10 },
            new Computer { Name = "Panorama Glass Gaming", Price = 2000, Image = "/assets/cdn/computer-panorama-gaming.png" },
            new Computer { Name = "Periphio Astral 5600G", Price = 1500, Image = "/assets/cdn/computer-periphio-astral-5600g.png", Discount = 25 },
            new Computer { Name = "Elite AvaDirect 3687Y", Price = 1500, Image = "/assets/cdn/computer-elite-avadirect.png" },
            new Computer { Name = "CyberPower MultiColor", Price = 1000, Image = "/assets/cdn/computer-cyberpower-pc.png" },
            new Computer { Name = "Corsair Vengeance", Price = 1000, Image = "/assets/cdn/computer-vengeance-i5200.png" },
        };
    }
}